Папка содержит решенные задачи 4-го блока "Programming with classes".

		Простейшие классы и объекты:
    
1.  Test1.java    задание 1
(Создайте класс Test1 двумя переменными. 
Добавьте метод вывода на экран и методы изменения этих переменных. 
Добавьте метод, который находит сумму значений этих переменных, 
и метод, который находит наибольшее значение из этих двух переменных.)

2.  Test2.java    задание 2
(Создйте класс Test2 двумя переменными. 
Добавьте конструктор с входными параметрами. 
Добавьте конструктор, инициализирующий члены класса по умолчанию. 
Добавьте set- и get- методы для полей экземпляра класса.)

3.  Student/src/by/epam/programming_with_classes/student
(Создайте класс с именем Student, содержащий поля: 
фамилия и инициалы, номер группы, успеваемость (массив из пяти элементов). 
Создайте массив из десяти элементов такого типа. 
Добавьте возможность вывода фамилий и номеров групп студентов, имеющих оценки, равные только 9 или 10.)

4.  Train/src/by/epam/programming_with_classes/train
(Создайте класс Train, содержащий поля: 
название пункта назначения, номер поезда, время отправления. 
Создайте данные в массив из пяти элементов типа Train, 
добавьте возможность сортировки элементов массива по номерам поездов. 
Добавьте возможность вывода информации о поезде, номер которого введен пользователем. 
Добавьте возможность сортировки массив по пункту назначения, причем поезда с 
одинаковыми пунктами назначения должны быть упорядочены по времени отправления.)

5.  Decimal_counter/src/by/epam/programming_with_classes/decimal_counter
(Опишите класс, реализующий десятичный счетчик, который может увеличивать 
или уменьшать свое значение на единицу в заданном диапазоне. 
Предусмотрите инициализацию счетчика значениями по умолчанию и произвольными значениями. 
Счетчик имеет методы увеличения и уменьшения состояния, и метод позволяющее получить его 
текущее состояние. Написать код, демонстрирующий все возможности класса.)

6.  Time/src/by/epam/programming_with_classes/time
(Составьте описание класса для представления времени. 
Предусмотрте возможности установки времени и изменения его отдельных полей 
(час, минута, секунда) с проверкой допустимости вводимых значений. 
В случае недопустимых значений полей поле устанавливается в значение 0. 
Создать методы изменения времени на заданное количество часов, минут и секунд.)

7.  Triangle/src/by/epam/programming_with_classes/triangle
(Описать класс, представляющий треугольник. 
Предусмотреть методы для создания объектов, вычисления площади, периметра и точки пересечения медиан.)

8.  Customer/src/by/epam/programming_with_classes/customer
(Создать класс Customer, спецификация которого приведена ниже. 
Определить конструкторы, set- и get- методы и метод toString(). 
Создать второй класс, агрегирующий массив типа Customer, с подходящими конструкторами и методами. 
Задать критерии выбора данных и вывести эти данные на консоль.
Класс Customer: id, фамилия, имя, отчество, адрес, номер кредитной карточки, номер банковского счета.
Найти и вывести:
a) список покупателей в алфавитном порядке;
b) список покупателей, у которых номер кредитной карточки находится в заданном интервале)

9.  Book/src/by/epam/programming_with_classes/book
(Создать класс Book, спецификация которого приведена ниже. 
Определить конструкторы, set- и get- методы и метод toString(). 
Создать второй класс, агрегирующий массив типа Book, с подходящими конструкторами и методами. 
Задать критерии выбора данных и вывести эти данные на консоль.
Book: id, название, автор(ы), издательство, год издания, количество страниц, цена, тип переплета.
Найти и вывести:
a) список книг заданного автора;
b) список книг, выпущенных заданным издательством;
c) список книг, выпущенных после заданного года.)

10. Airline/src/by/epam/programming_with_classes/airline
(Создать класс Airline, спецификация которого приведена ниже. 
Определить конструкторы, set- и get- методы и метод toString(). 
Создать второй класс, агрегирующий массив типа Airline, с подходящими конструкторами и методами. 
Задать критерии выбора данных и вывести эти данные на консоль.
Airline: пункт назначения, номер рейса, тип самолета, время вылета, дни недели.
Найти и вывести:
a) список рейсов для заданного пункта назначения;
b) список рейсов для заданного дня недели;
c) список рейсов для заданного дня недели, время вылета для которых больше заданного.)


		Агрегация и композиция
	
1. Text/src/by/epam/programming_with_classes/text
(Создать объект класса Текст, используя классы Предложение, Слово. 
Методы: дополнить текст, вывести на консоль текст, заголовок текста.)

2. Car/src/by/epam/programming_with_classes/car
(Создать объект класса Автомобиль, используя классы Колесо, Двигатель. 
Методы: ехать, заправляться, менять колесо, вывести на консоль марку автомобиля.)

3. State/src/by/epam/programming_with_classes/state
(Создать объект класса Государство, используя классы Область, Район, Город. 
Методы: вывести на консоль столицу, количество областей, площадь, областные центры.)

4. Account/src/by/epam/programming_with_classes/account
(Счета. Клиент может иметь несколько счетов в банке. Учитывать возможность блокировки/разблокировки счета. 
Реализовать поиск и сортировку счетов. Вычисление общей суммы по счетам. 
Вычисление суммы по всем счетам, имеющим положительный и отрицательный балансы отдельно.)

5. Tour_Agency/src/by/epam/programming_with_classes/tour_agency
(Туристические путевки. Сформировать набор предложений клиенту по выбору 
туристической путевки различного типа (отдых, экскурсии, лечение, шопинг, круиз и т. д.) 
для оптимального выбора. Учитывать возможность выбора транспорта, питания и числа дней. 
Реализовать выбор и сортировку путевок.)
