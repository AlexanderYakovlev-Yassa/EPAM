1_Basics_of_software_code_development

1. Объясните, что имеется в виду, когда говорится: Java-язык программирования и Java-платформа.
	- Язык программирования Java это формальная знаковая система предназначенная для записи компьютерных программ. Язык программирования определяет набор правил по которым формируется набор команд (текст программы) и действия которые выполняет компьютер под управлением этих команд.
	- Java-платформа это ряд програмных продуктов направленных на обеспечение разработки программного обеспечения и встраивание его в любое кросс-платформенное программное обеспечение. Пакет программ позволяющий разрабатывать и запускать программы на языке программирования JAVA.
2. Поясните, как связаны имя java-файла и классы, которые в этом файле объявляются.
	- Файл *.java является файлом котрый содержит программный код класса Java и имя этого файла должно совпадать с именем класса объявленного в нем.
3. Расшифруйте аббревиатуры JVM, JDK и JRE; покажите, где “они находятся” и что собой представляют.
	- JVM - Java virtual maschin (виртуальная машина Java). Основная часть исполняемой системы JRE. JVM исполняет байт код полученный из программы написанной на языке Java. 
	- JDK - Java development kit. (комплект разработчика Java). Бесплатно распространяемый компанией Oracle Corporation (ранее Sun Microsystems) комплект разработчика приложений на языке Java, включающий в себя компилятор Java (javac), стандартные библиотеки классов Java, примеры, документацию, различные утилиты и исполнительную систему Java (JRE).
	- JRE - Java runtime environment (Среда выполнения для Java) — минимальная реализация виртуальной машины, необходимая для исполнения Java-приложений, без компилятора и других средств разработки. Состоит из виртуальной машины — Java Virtual Machine — и библиотеки Java-классов.
4. Объясните, как скомпилировать и запустить приложение из командной строки, а также зачем в переменных среды окружения прописывать пути к установленному jdk.
	- Чтобы скомпилировать файл с кодом программы Java Code.java необходимо в консоли набрать команду javac G:\folder\Code.java. В указанной директории появится скомпилированный файл с байт кодом Code.class. Чтобы запустить файл на исполнение необходимо набрать команду java G:\folder\Code. Переменные среды необходимы для того чтобы система знала где находятся исполняемые файлы javac и java.
5. Перечислите атрибуты доступа, объясните их действие.
	- private метод или член класса виден только внутри класса.
	  protected метод или член класса виден внутри класса, внутри пакета и внутри производного класса, даже если он уже в другом пакете.
	  "без атрибута" метод или член класса виден в любом месте пакета.
	  public метод или член класса виден только внутри текущего класса.
6. Что такое пакеты в java-программе, что представляют собой пакеты на диске? Каково соглашение по именованию пакетов? Как создать пакет?
	- Пакет это набор классов объединенных логически. На диске пакету соответсвует директория. Пакеты имеют имена соответствующих директорий на диске. Пакет создается в процессе компилирования проекта.
7. Объясните, какие классы, интерфейсы, перечисления необходимо импортировать в вашу программу, как это сделать. Влияет ли импорт пакета на импорт классов и др., лежащего в подпакетах? Какой пакет в Java импортируется по умолчанию?
	- В программу необходимо импортировать те классы, пакеты, перечисления и интерфейсы которые необходимы для выполнения данной программы. Импорт производится объявлением пакета, класаа и т.д.  при помощи директивы import после директивы package. По умолчанию импортируется пакет java.lang.* .
8. Объясните различия между терминами “объект” и “ссылка на объект”.
	- объект это экземпляр класса занимающий определенное место в памяти. Ссылка на объект это указатель на ячейки памяти в которых расположен объект.
9. Какие примитивные типы Java вы знаете, как создать переменные примитивных типов? Объясните процедуру, по которой переменные примитивных типов передаются в методы как параметры.
	- bite, short, int, long, float, double, char, boolean. Чтобы создать переменную приметивного типа необходимо указать тип этой переменной и затем имя переменной, например: int i; . Для передачи переменной примитивного типа в метод необходимо при объявлении метода после его имени в скобках указать тип переменной и имя переменной, например: public static void set(int i, boolean a). 
10. Каков размер примитивных типов, как размер примитивных типов зависит от разрядности платформы, что такое преобразование (приведение) типов и зачем оно необходимо? Какие примитивные типы не приводятся ни к какому другому типу.
	- bite 8b(1B), short 16b(2B), int 32b(4B), long 64b(8B), float 32b(1B), double 64b(8B), char 16b(2B), boolean 8b(1B). Размер типов не зависит от платформы. В java нельзя выполнить арифметические операции с разными типами, поэтому для их выполнения необходимо сделать тюню приведение типов. тип boolean нельзя привести ни к какому другому типу данных.
11. Объясните, что такое явное и неявное приведение типов, приведите примеры, когда такое преобразование имеет место.
	- явное приведение типов записывается особым образом, например: f = (int)m; в неявном виде компилятор понимает что нужно приведение типов, но для человека операция выглядит так, как будто переменные уже являются однотипными. f = m; Неявное приведение допустимо только при приведении типа с меньшим количеством данных в тип с большим, иначе компилятор генерирует ошибку.
12. Что такое литералы в Java-программе, какую классификацию литералов вы знаете, как записываются литералы различных видов и типов в Java-программе?
	- Литералы это константы записанные по правилам языка Java. Целочисленные литералы для определения системы счисления (десятиричная - без знаков 56. восмиричная, перед числом ставится знак 0, 056, шеснадцатиричная, перед числом ставится знак 0х, 0х56f, двоичная, перед числом ставится знак 0b, 0b0111001) Литералы с плавающей точкой (стандартная форма 3.75, научная форма 3.75е5). Литералы для определения типа данных float - 5.6f double 5.6d или просто 5.6, long 56L, bite 5b. Символьные литералы 'f' 'F'. Строковые литералы "Face".
13. Как осуществляется работа с типами при вычислении арифметически выражений в Java?
	- арифметические вычисления возможны только с переменными одинаковых типов. Для разных типов необходимо проводить приведение типо, если это возможно.
14. Что такое классы-оболочки, для чего они предназначены? Объясните, что значит: объект класса оболочки – константный объект.
	- класс-оболочка это объект аналог примитивного типа. класс оболочка расширяет возможности приметивного типа. Константный объект это такой объект который не может изменятся после инициализации.
15. Объясните разницу между примитивными и ссылочными типами данных. Поясните существующие различия, при передаче параметров примитивных и ссылочных типов в методы. Объясните, как константные объекты ведут себя при передаче в метод.
	- Переменная примитивного типа данных имеет ссылку на ячейку памяти где хранится значение этой переменной в соответствующем формате. Ссылочные типы содержат ссылку на объет. При передаче в метод переменной с примитивным типом данных значение этой переменной копируется и дальнейшие операции внутри метода производятся с этой копией. Значение исходной переменной при этом не изменяется. При передаче в метод переменной со ссылочным типом данных копируется ссылка на объект через которую метод имеет доступ к объекту. Внутри метода эта ссылка может измениться (на ссылку на другой объект того же типа). Исходная ссылка на объет и сам объект при этом не изменяется. При передаче в метод константы значение этой константы копируется, внутри метода все действия производятся над этой копиейю Значение константной переменной не изменяется. 
16. Поясните, что такое автоупаковка и автораспаковка.
	- автоупаковка это автоматическое преобразование примитивного типа данных в соответствующий тип объекта. Автораспаковка это автоматическое приведение объекта к соответствующему примитивному типу данных.
17. Перечислите известные вам арифметические, логические и битовые операторы, определите случаи их употребления. Что такое приоритет оператора, как определить, в какой последовательности будут выполняться операции в выражении, если несколько из них имеют одинаковый приоритет.
	- арифметические операторы: + - * / % ++ -- логические операторы && || ! побитовые операторы & | ^ ~ >> << >>>. Операторы имеют иерархию приоритета. Операторы выполняются по очереди в соответствии с приоритетом, при совпадении приоритетов операторы выполняются слева направо.
18. Укажите правила выполнения операций с плавающий точкой в Java (согласно стандарту IEEE754). Как определить, что результатом вычисления стала бесконечность или нечисло?
	- 
